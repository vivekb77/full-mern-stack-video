{"version":3,"sources":["pages/Login.js","pages/Register.js","pages/Card.js","pages/Tweets.js","pages/Examples.js","App.js","index.js"],"names":["require","config","baseURL","process","App","useState","email","setEmail","password","setPassword","event","preventDefault","fetch","method","headers","body","JSON","stringify","response","json","data","user","localStorage","setItem","window","location","href","alert","className","onSubmit","value","onChange","e","target","type","placeholder","required","rel","history","useHistory","name","setName","status","push","Card","props","ratio","tweet","like_count","impression_count","toFixed","ratio1","reply_count","color","style","retweet_count","quote_count","tweetSentiment","newtweet","onClick","navigator","clipboard","writeText","tweetID","TwitteruserFullName","Tweets","tweets","setTweets","twitterUserID","settwitterUserID","React","disable","setDisable","handle","setHandle","userName","setUserName","errormessage","setErrormessage","getItem","tweeterUserHadleToPullTweets","req","obj","i","prevArray","length","error","useEffect","token","jwt","decode","console","log","removeItem","replace","maxLength","disabled","map","index","Examples","AllAboutTweetsArray","TwitteruserName","path","exact","component","Login","Register","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f43d15e9.chunk.js","sourcesContent":["import { useState } from 'react'\nrequire('dotenv').config();\n\n\nconst baseURL = process.env.REACT_APP_BASE_URL\n\nfunction App() {\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\t\n\n\tasync function loginUser(event) {\n\t\tevent.preventDefault()\n\n\t\tconst response = await fetch(`${baseURL}/api/login`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail,\n\t\t\t\tpassword,\n\t\t\t}),\n\t\t})\n\n\t\tconst data = await response.json()\n\n\t\tif (data.user) {\n\t\t\tlocalStorage.setItem('token', data.user)\n\t\t\t// alert('Login successful')\n\t\t\twindow.location.href = '/tweets'\n\t\t} else {\n\t\t\talert('Please check your username and password')\n\t\t}\n\t\t\n\t\t\n\t\n\t}\n\n\treturn (\n\t\t<div className='logindiv'>\n\t\t\t<h1>GalaxzAI Login</h1>\n\t\t\t<form onSubmit={loginUser} className=\"formlogin\">\n\t\t\t\t<input \n\t\t\t\tclassName='emaillogin'\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input\n\t\t\t\tclassName='emaillogin'\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input className='button' type=\"submit\" value=\"Login\" />\n\t\t\t\t<br/>\n\t\t\t\t<a rel=\"noopener noreferrer\" href=\"register\">New here! Register</a>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nrequire('dotenv').config();\n\n\nconst baseURL = process.env.REACT_APP_BASE_URL\n\nfunction App() {\n\tconst history = useHistory()\n\n\tconst [name, setName] = useState('')\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\n\t//this funtion is communicating with backend\n\tasync function registerUser(event) {\n\t\tevent.preventDefault() // to prevent page refresh on submit as form is inside div\n\n\t\t//this funtion is communicating with backend\n\t\t//server folder , index.js file has this route /api/register\n\t\tconst response = await fetch(`${baseURL}/api/register`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname,\n\t\t\t\temail,\n\t\t\t\tpassword,\n\t\t\t}),\n\t\t})\n\n\t\tconst data = await response.json() //response from server will be ok or error\n\n\t\tif (data.status === 'ok') {\n\t\t\thistory.push('/login') // if response is ok then redirect to login page\n\t\t}\n\t\telse {\n\t\t\talert('You are already registered! Login now')\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className='registerdiv'>\n\t\t\t<h1>GalaxzAI Register</h1>\n\t\t\t<form className='registerform' onSubmit={registerUser}>\n\t\t\t\t<input className='registerinput'\n\t\t\t\trequired\n\t\t\t\t\tvalue={name}\n\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input className='registerinput'\n\t\t\t\trequired\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input className='registerinput'\n\t\t\t\trequired\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input className='button' type=\"submit\" value=\"Register\" />\n\t\t\t\t<br/>\n\t\t\t\t<a rel=\"noopener noreferrer\" href=\"login\">Already User! Login</a>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from \"react\";\n\n\nexport default function Card(props) {\n\n    let ratio = ((props.tweet.like_count/props.tweet.impression_count)*100).toFixed(2);\n    let ratio1 = ((props.tweet.reply_count/props.tweet.impression_count)*100).toFixed(2);\n    let color = \"#38761d\";\n\n    if(ratio>2){\n        color = \"#6aa84f\";\n    }\n    if(ratio>=1 && ratio<2){\n        color = \"#cc6600\";\n    }\n    if(ratio<1){\n        color = \"#ff0000\";\n    }\n\n\n    return (\n        <div className=\"card\">\n            <div className=\"card-body\">\n\n              {props.tweet && <h5 className=\"card-title\"><span style={{color: `#808080`}}>Tweet - </span>{props.tweet.tweet}</h5>}\n              {props.tweet && <hr/>}\n              {props.tweet && <p className=\"card-text\"><span style={{color: `${color}`}}>{ `Likes/Views - ${ratio}% | Replies/Views - ${ratio1}% `}</span> { ` | Views - ${props.tweet.impression_count} | Likes - ${props.tweet.like_count} | Replies - ${props.tweet.reply_count} | Retweets - ${props.tweet.retweet_count} | Q Tweets - ${props.tweet.quote_count}`}</p>}\n               {props.tweet.tweetSentiment &&  <h6 className=\"card-text\">{`New Tweet for you - ${props.tweet.tweetSentiment}`}</h6>}\n               {/* {props.tweet.newtweet &&  <h6 className=\"card-text\"><span style={{color: `#808080`}}>Tweet for you </span></h6>} */}\n               {props.tweet.newtweet &&  <h6 className=\"card-text\"><span style={{color: `#808080`}}>Tweet by AI - </span>{`  ${props.tweet.newtweet}`}</h6>}\n               {props.tweet.newtweet && <button className=\"copybutton\" onClick={() => {navigator.clipboard.writeText(props.tweet.newtweet);}}>Copy Tweet</button>}\n               <br/>\n               <br/>\n               <br/>\n               {props.tweet &&<a href={`${props.tweet.tweetID}`} target=\"_blank\" rel=\"noreferrer\">View this Tweet by {`${props.tweet.TwitteruserFullName} on Twitter`}</a>} \n\n            </div>\n        </div>\n    );\n}\n\n","import React, { useEffect, useState } from 'react'\nimport jwt from 'jsonwebtoken'\nimport { useHistory } from 'react-router-dom'\nimport Card from './Card'\nrequire('dotenv').config();\n\nconst baseURL = process.env.REACT_APP_BASE_URL\n\nconst Tweets = () => {\n\tconst history = useHistory()\n\tconst [tweets, setTweets] = useState([])\n\tconst [twitterUserID, settwitterUserID] = useState('')\n\tconst [disable, setDisable] = React.useState(false);\n\tconst [handle, setHandle] = React.useState();\n\tconst [userName, setUserName] = React.useState();\n\tconst [errormessage, setErrormessage] = React.useState();\n\n\t\n\n\n\tuseEffect(() => {\n\t\tconst token = localStorage.getItem('token')\n\t\t\n\t\t// https://mudit.hashnode.dev/5-things-you-should-know-about-useeffect\n\t\tif (token) {\n\t\t\tconst user = jwt.decode(token)\n\t\t\tif (!user) {\n\t\t\t\tconsole.log('no user')\n\t\t\t\tlocalStorage.removeItem('token')\n\t\t\t\thistory.replace('/login')\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t// populateQuote()do something //cleanup function\n\t\t\t\t// console.log('user is ', user)\n\t\t\t}\n\t\t}else{\n\t\t\thistory.replace('/login')\n\t\t}\n\n\t},[])\n\n\tasync function GetTweets(event) {\n\t\tevent.preventDefault()\n\t\tsetDisable(true);\n\t\tsetTweets(tweets => []);\n\t\tsetUserName(userName => \"\");\n\t\tsetHandle(handle => \"\");\n\t\tsetErrormessage(errormessage => \"\");\n\n\t\tconst req = await fetch(`${baseURL}/api/tweets`, {\n\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'x-access-token': localStorage.getItem('token'),\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\ttweeterUserHadleToPullTweets: twitterUserID,\n\t\t\t}),\n\n\t\t})\n\n\t\tconst data = await req.json()\n\t\tif (data.status === 'ok') {\n\t\t\t// console.log('data is ', data.error)\n\t\t\tfor (let i=0;i<data.tweets.length;i++){ \n\n\t\t\t\tconst obj = {\n\t\t\t\t\ttweetID: data.tweets[i].tweetID,\n\t\t\t\t\ttweet: data.tweets[i].tweet,\n\t\t\t\t\ttweetSentiment: data.tweets[i].tweetSentiment,\n\t\t\t\t\timpression_count: data.tweets[i].impression_count,\n\t\t\t\t\tlike_count: data.tweets[i].like_count,\n\t\t\t\t\treply_count: data.tweets[i].reply_count,\n\t\t\t\t\tquote_count: data.tweets[i].quote_count,\n\t\t\t\t\tretweet_count: data.tweets[i].retweet_count,\n\t\t\t\t\tnewtweet: data.tweets[i].newtweet,\n\t\t\t\t\tTwitteruserFullName: data.tweets[i].TwitteruserFullName,\n\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\tsetTweets(prevArray => [...prevArray, obj])\n\t\t\t\t\n\t\t\t\tsetHandle(handle => data.tweets[0].TwitteruserFullName);\n\t\t\t\tsetUserName(userName => data.tweets[0].TwitteruserFullName);\n\t\t\t\tsetDisable(false);\n\t\t\t\t\n\t\t\t\t\n              }\n\t\t} \n\t\telse if(data.status === 'error'){\n\t\t\tsetDisable(false);\n\t\t\tsetErrormessage(userName => data.error);\n\t\t\t// alert(data.error)\n\t\t\t\n\t\t}\n\t}\n\n\tconst handleClick = event => {\n\n\t\tconsole.log('button disabled');\n\t  };\n\n\treturn (\n\t\t<div className='tweetdiv'>\n\t\t<div className='header'>\n\t\t\t<h1 className='title'><a target=\"_blank\" href=\"https://twitter.com/galaxz_AI\">GALAXZ AI</a></h1>\n\t\t\t<h2 className='title'>Analyse user's Tweets, and write new Tweets in the same style</h2>\n\t\t\t {/* <h5>We analyse what makes some Tweets viral? Based on the analysis, we suggest new tweets</h5> */}\n\t\t\t {errormessage && <h4 className=\"errormessage\">{`${errormessage}`}</h4>}\n\n\t\t\t <h2><a target=\"_blank\" href=\"/\">See Examples here</a></h2>\n\t\t\t<form onSubmit={GetTweets}>\n\t\t\t{/* <h5>Enter a Twitter handle without @</h5> */}\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName='userIdTextBox'\n\t\t\t\t\tmaxLength={70}\n\t\t\t\t\trequired\n\t\t\t\t\tplaceholder=\"Twitter User handle without @\"\n\t\t\t\t\tonChange={(e) => settwitterUserID(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<input type=\"submit\" className='button' value={disable ? `Analysing...` : `Get Analysis` } disabled={disable}/>\n\t\t\t\t\n\t\t\t</form>\n\t\t\t{disable && <h6>Analysis and new Tweet genaration may take few seconds..Please wait..</h6>}\n\t\t\t<br/>\n\t\t\t{disable && <h6><a href=\"mailto:learn@dictionaryv2.com\">Send us feedback at learn@dictionaryv2.com</a></h6>}\n\t\t\t<br/>\n\t\t\t\t{/* <h4>Need a similar report (on 500 Tweets) for any Twitter account? <a href=\"mailto:learn@dictionaryv2.com\">Email us at learn@dictionaryv2.com</a></h4> */}\n\t\t\t{/* {handle && <h6><a href=\"mailto:learn@dictionaryv2.com\">Send us feedback at learn@dictionaryv2.com</a></h6>} */}\n\t\t\t{handle && <h4 className=\"card-title\">{`@${handle} (${userName})`}</h4>}\n\t\t\t</div>\n\t\t\t{/* {handle && <h6>Sorted by Likes/Views%</h6>} */}\n\n\t\t\t{tweets.map((tweet,index) => {\n\t\t\t\treturn <Card \n\t\t\t\ttweet={tweet}  key={index}\n\t\t\t\tonChange={setTweets}\n\t\t\t\t/>\n\t\t\t})}\n\t\t\t\n\n\t\t</div>\n\t)\n}\n\nexport default Tweets\n\n","import React, { useEffect, useState } from 'react'\n// import jwt from 'jsonwebtoken'\nimport { useHistory } from 'react-router-dom'\nimport Card from './Card'\nimport NavBar from './Navbar'\nrequire('dotenv').config();\n\nconst baseURL = process.env.REACT_APP_BASE_URL\n\n\nconst Examples = () => {\n\t// const history = useHistory()\n\tconst [tweets, setTweets] = useState([])\n\t// const [twitterUserID, settwitterUserID] = useState('')\n\tconst [disable, setDisable] = React.useState(false);\n\tconst [handle, setHandle] = React.useState();\n\tconst [userName, setUserName] = React.useState();\n\n\n\t// useEffect(() => {\n\t// \t// const token = localStorage.getItem('token')\n\t\t\n\t// \tGetTweets();\n\t// \t// if (token) {\n\t// \t// \tconst user = jwt.decode(token)\n\t// \t// \tif (!user) {\n\t// \t// \t\tconsole.log('no user')\n\t// \t// \t\tlocalStorage.removeItem('token')\n\t// \t// \t\thistory.replace('/login')\n\t\t\t\t\n\t// \t// \t} else {\n\t// \t// \t\t// populateQuote()do something\n\t// \t// \t\t// console.log('user is ', user)\n\t// \t// \t}\n\t// \t// }else{\n\t// \t// \thistory.replace('/login')\n\t// \t// }\n\n\t// }), []\n\n\tasync function GetTweets(event) {\n\t\tevent.preventDefault()\n\t\tsetDisable(true);\n\t\t\n\t\t\n\t\t\n\n\t\tconst req = await fetch(`${baseURL}/api/examples`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'x-access-token': localStorage.getItem('token'),\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\t// tweeterUserHadleToPullTweets: twitterUserID,\n\t\t\t}),\n\t\t\t\n\t\t})\n\n\t\tconst data = await req.json()\n\t\tif (data.status === 'ok') {\n\n\t\t\t\tsetTweets(tweets => []); //clear them first\n\t\t\t\tsetUserName(userName => \"\");\n\t\t\t\tsetHandle(handle => \"\");\n\n\t\t\tfor (let i=0;i<data.tweets.AllAboutTweetsArray.length;i++){ \n\n\t\t\t\tconst obj = {\n\t\t\t\t\ttweetID: data.tweets.AllAboutTweetsArray[i].tweetID,\n\t\t\t\t\ttweet: data.tweets.AllAboutTweetsArray[i].tweet,\n\t\t\t\t\ttweetSentiment: data.tweets.AllAboutTweetsArray[i].tweetSentiment,\n\t\t\t\t\timpression_count: data.tweets.AllAboutTweetsArray[i].impression_count,\n\t\t\t\t\tlike_count: data.tweets.AllAboutTweetsArray[i].like_count,\n\t\t\t\t\treply_count: data.tweets.AllAboutTweetsArray[i].reply_count,\n\t\t\t\t\tquote_count: data.tweets.AllAboutTweetsArray[i].quote_count,\n\t\t\t\t\tretweet_count: data.tweets.AllAboutTweetsArray[i].retweet_count,\n\t\t\t\t\tnewtweet: data.tweets.AllAboutTweetsArray[i].newtweet,\n\t\t\t\t\tTwitteruserFullName: data.tweets.AllAboutTweetsArray[i].TwitteruserFullName,\n\t\t\t\t\tTwitteruserName: data.tweets.TwitteruserName,\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\n\t\t\t\tsetTweets(prevArray => [...prevArray, obj])\n\t\t\t\t\n\t\t\t\tsetHandle(handle => data.tweets.TwitteruserName);\n\t\t\t\tsetUserName(userName => data.tweets.AllAboutTweetsArray[0].TwitteruserFullName);\n\t\t\t\tsetDisable(false);\n\t\t\t\t\n\t\t\t\t\n              }\n\t\t} \n\t\telse if(data.status === 'error'){\n\t\t\tsetDisable(false);\n\t\t\talert(data.error)\n\t\t\t\n\t\t}\n\t}\n\n\t\n\n\treturn (\n\t\t\n\t\t<div className='tweetdiv'>\n\t\t\t{/* <NavBar sticky=\"top\" /> */}\n\t\t<div className='header'>\n\t\t\t<br/>\n\t\t\t<h1 className='title'><a target=\"_blank\" href=\"https://twitter.com/galaxz_AI\">GALAXZ AI</a></h1>\n\t\t\t<h2 className='title'>Analyse user's last few Tweets, and write new Tweets in the same style</h2>\n\t\t\t {/* <h5>We analyse what makes some Tweets viral? Based on the analysis, we suggest new tweets</h5> */}\n\n\t\t\t<form onSubmit={GetTweets}>\n\t\t\n\t\t\t\t\n\t\t\t\t<input type=\"submit\" className='button' value={disable ? `      Analysing...      ` : ` Show me Examples ` } disabled={disable}/>\n\t\t\t\t\n\t\t\t</form>\n\n\t\t\t{handle && <h6>Click again to see another example</h6>}\n\t\t\t{/* {!handle && <h6>Please wait..</h6>} */}\n\t\t\t{/* <h4>Need a similar report (on 500 Tweets) for any Twitter account? <a href=\"mailto:learn@dictionaryv2.com\">Email us at learn@dictionaryv2.com</a></h4> */}\n\t\t\t\n\t\t\t<h2 className='title1'><a target=\"_blank\" href=\"/tweets\">Analyse other Twitter accounts here</a></h2>\n\t\t\t{handle && <h4 className=\"card-title\">{`@${handle} (${userName})`}</h4>}\n\t\t\t\n\t\t</div>\n\t\t\t{/* {handle && <h6>Sorted by Likes/Views%</h6>} */}\n\n\t\t\t{tweets.map((tweet,index) => {\n\t\t\t\treturn <Card \n\t\t\t\ttweet={tweet}  key={index}\n\t\t\t\tonChange={setTweets}\n\t\t\t\t/>\n\t\t\t})}\n\t\t\t\n\n\t\t</div>\n\t)\n}\n\nexport default Examples\n\n","import React from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Login from './pages/Login'\nimport Register from './pages/Register'\nimport Tweets from './pages/Tweets'\nimport Examples from './pages/Examples'\n\n\nconst App = () => {\n\treturn (\n\t\t<div className='maindiv'>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Route path=\"/login\" exact component={Login} />\n\t\t\t\t<Route path=\"/register\" exact component={Register} />\n\t\t\t\t<Route path=\"/tweets\" exact component={Tweets} />\n\t\t\t\t<Route path=\"/\" exact component={Examples} />\n\t\t\t</BrowserRouter>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}